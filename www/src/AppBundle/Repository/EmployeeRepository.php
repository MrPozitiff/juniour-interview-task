<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Query;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * employeeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmployeeRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param int $currentPage
     * @param $limit int
     * @return Paginator
     */
    public function getAllEmployees($currentPage = 1, $limit = 20)
    {
        $query = $this->createQueryBuilder('e')
            ->orderBy('e.lastName', 'DESC')
            ->getQuery();

        $paginator = $this->paginate($query, $currentPage, $limit);

        return $paginator;
    }

    /**
     * @param $job
     * @param int $currentPage
     * @param int $limit
     * @return Paginator
     */
    public function getAllEmployeesByJob($job, $currentPage = 1, $limit = 20)
    {
        $query = $this->createQueryBuilder('e')
            ->where('e.employeePosition = :name')
            ->orderBy('e.lastName', 'DESC')
            ->setParameter('name', $job)
            ->getQuery();

        $paginator = $this->paginate($query, $currentPage, $limit);

        return $paginator;
    }

    /**
    *     $paginator->getIterator()->count() # Total fetched (ie: `5` posts)
    *     $paginator->count() # Count of ALL posts (ie: `20` posts)
    *     $paginator->getIterator() # ArrayIterator
    *
    * @param Query $dql   DQL Query Object
    * @param integer            $page  Current page (defaults to 1)
    * @param integer            $limit The total number per page (defaults to 20)
    *
    * @return Paginator
    */
    public function paginate($dql, $page, $limit)
    {
        $paginator = new Paginator($dql);

        $paginator->getQuery()
            ->setFirstResult($limit * ($page - 1)) // Offset
            ->setMaxResults($limit); // Limit

        return $paginator;
    }
}
